global:
  development:
    gitlabUrl: &renku-gitlab-url https://gitlab.com
    gitlabClientId: &gitlab-client-id c3c08e5aed6b61a06e8bf2dda5e07bbe5ee7f8629863d61b802e3af4ee7251b6
    gitlabClientSecret: &gitlab-client-secret d2de6a97b0ba8eaf2b98fa834a607078b04bb4fdde777ec2f2fa33d0a42155c2
  gitlab:
    clientSecret: 94291a39901f8f5f1d6893435a5012d44c5d789271f8fd9a47d5fb8101d9657d
    postgresDatabase: gitlabhq_production
    postgresUser: gitlab
    postgresPassword: gitlab
    sudoToken: token4gitlab
    urlPrefix: /gitlab
  keycloak:
    postgresDatabase: keycloak
    postgresUser: keycloak
    postgresPassword: keycloak
  jupyterhub:
    postgresDatabase: jupyterhub
    postgresUser: jupyterhub
    postgresPassword: jupyterhub
  gateway:
    clientSecret: a-much-more-secret-value
    gitlabClientSecret: c774e7ffa2c3a3e4ee5637a977cfa5af90d62d5050a83cff86a4b5ad558fb4e5
  renku:
    domain: &renku-domain #@renku@#
  graph:
    jena:
      dataset: renku
    dbEventLog:
      postgresPassword: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
    tokenRepository:
      postgresPassword: tokenstoragepass

  useHTTPS: true

gitlab:
  enabled: false

ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
  enabled: true
  hosts:
  - *renku-domain
  tls:
  - hosts:
    - *renku-domain
    secretName: openshift-renku-tls
keycloak:
  keycloak:
    username: admin
    password: pass4keycloak
    persistence:
      dbHost: renku-postgresql.renku.svc
      existingSecret: renku
    extraEnv: |
      - name: PROXY_ADDRESS_FORWARDING
        value: "true"
    extraVolumes: |
      - name: realm-secret
        secret:
          secretName: renku
          items:
          - key: renku-realm.json
            path: renku-realm.json
      - name: theme
        emptyDir: {}
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
postgresql:
  postgresPassword: postgres
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
ui:
  ingress:
    enabled: false
  baseUrl: 	http://#@renku@#
  gitlabUrl: *renku-gitlab-url
  gatewayUrl: https://#@renku@#/api
  jupyterhubUrl: http://#@renku@#/jupyterhub
  welcomePage:
    text: |
        ## Welcome to Renku's Renku!
        Renku is software for collaborative data science.
        With Renku you can share code and data, discuss problems and solutions, and coordinate data-science projects.
        ## Template
        I am templateable, so deployment specific information can be put here!
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
notebooks:
  securityContext:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
  gitlab:
    registry:
        host: registry.gitlab.com
    url: *renku-gitlab-url
  serverOptions:
    cpu_request:
      displayName: CPU request
      type: enum
      default: 0.1
      options: [0.1, 0.5]
    mem_request:
      displayName: Memory request
      type: enum
      default: 1G
      options: [1G, 2G]
    gpu_request:
      displayName: GPU request
      type: int
      default: 0
      range: [0,0]
    defaultUrl:
      displayName: default landing URL of the notebook server
      type: enum
      default: /lab
      options: [/lab, /rstudio]
    lfs_auto_fetch:
      displayName: Automatically fetch LFS data
      type: boolean
      default: false
  jupyterhub:
    rbac:
      enabled: true
    hub:
      cookieSecret: acfe99a6eccfecc43f7dd0269fd3d108e3c7d0dc4b3d4b15899ea8b323eacfa6
      baseUrl: '/jupyterhub/'
      allowNamedServers: true
      db:
        type: postgres
        url: postgres+psycopg2://jupyterhub:jupyterhub@renku-postgresql.renku.svc:5432/jupyterhub
      extraEnv:
        GITLAB_URL: *renku-gitlab-url
      services:
        notebooks:
          url: http://renku-notebooks.renku.svc
          apiToken: randomvalue
        gateway:
          admin: true
          oauth_client_id: &gatewayClient gateway
          apiToken: &gatewaySecret randomvalue
          oauth_redirect_uri: https://#@renku@#/api/auth/jupyterhub/token
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
    auth:
      state:
        enabled: true
        cryptoKey: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
      type: gitlab
      gitlab:
        clientId: *gitlab-client-id
        clientSecret: *gitlab-client-secret
        callbackUrl: https://#@renku@#/jupyterhub/hub/oauth_callback # Forces the default callback url

    proxy:
      secretToken: randomvalue
      service:
        type: ClusterIP
      https:
        enabled: false
      chp:
        resources:
          requests:
            cpu: 100m
            memory: 512Mi

gateway:
  secretKey: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
  jupyterhub:
    clientId: *gatewayClient
    clientSecret: *gatewaySecret
  gitlabUrl: *renku-gitlab-url
  gitlabClientId: *gitlab-client-id
  gitlabClientSecret: *gitlab-client-secret
  graph:
    sparql:
      username: admin
      password: *sparql-pass
  redis:
    master:
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
  resources:
    requests:
      cpu: 100m
      memory: 512Mi

graph:
  jena:
    admin:
      password: &sparql-pass randomvalue
    resources:
      requests:
        cpu: 200m
        memory: 1Gi
  gitlab:
    url: *renku-gitlab-url
  webhookService:
    play:
      secret: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
    hookToken:
      secret: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
  triplesGenerator:
    play:
      secret: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
  tokenRepository:
    tokenEncryption:
      secret: 3a5d1fcea7296b183286e046afbd9d3de8ac79e25afe30a9030dff8e2c4b7a71
  resources:
    requests:
      cpu: 100m
      memory: 1Gisdf
